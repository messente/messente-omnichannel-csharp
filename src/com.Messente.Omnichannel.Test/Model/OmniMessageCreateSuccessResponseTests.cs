/* 
 * Omnichannel API
 *
 * Messente's API which allows sending messages via various channels with fallback options.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: messente@messente.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using com.Messente.Omnichannel.Api;
using com.Messente.Omnichannel.Model;
using com.Messente.Omnichannel.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace com.Messente.Omnichannel.Test
{
    /// <summary>
    ///  Class for testing OmniMessageCreateSuccessResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class OmniMessageCreateSuccessResponseTests
    {
        // TODO uncomment below to declare an instance variable for OmniMessageCreateSuccessResponse
        //private OmniMessageCreateSuccessResponse instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of OmniMessageCreateSuccessResponse
            //instance = new OmniMessageCreateSuccessResponse();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OmniMessageCreateSuccessResponse
        /// </summary>
        [Test]
        public void OmniMessageCreateSuccessResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" OmniMessageCreateSuccessResponse
            //Assert.IsInstanceOfType<OmniMessageCreateSuccessResponse> (instance, "variable 'instance' is a OmniMessageCreateSuccessResponse");
        }


        /// <summary>
        /// Test the property 'Messages'
        /// </summary>
        [Test]
        public void MessagesTest()
        {
            // TODO unit test for the property 'Messages'
        }
        /// <summary>
        /// Test the property 'To'
        /// </summary>
        [Test]
        public void ToTest()
        {
            // TODO unit test for the property 'To'
        }
        /// <summary>
        /// Test the property 'OmnimessageId'
        /// </summary>
        [Test]
        public void OmnimessageIdTest()
        {
            // TODO unit test for the property 'OmnimessageId'
        }

    }

}
