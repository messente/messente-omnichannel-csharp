/* 
 * Omnichannel API
 *
 * Messente's API which allows sending messages via various channels with fallback options.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: messente@messente.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using com.Messente.Omnichannel.Api;
using com.Messente.Omnichannel.Model;
using com.Messente.Omnichannel.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace com.Messente.Omnichannel.Test
{
    /// <summary>
    ///  Class for testing Viber
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ViberTests
    {
        // TODO uncomment below to declare an instance variable for Viber
        //private Viber instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Viber
            //instance = new Viber();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Viber
        /// </summary>
        [Test]
        public void ViberInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Viber
            //Assert.IsInstanceOfType<Viber> (instance, "variable 'instance' is a Viber");
        }


        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Test]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }
        /// <summary>
        /// Test the property 'ImageUrl'
        /// </summary>
        [Test]
        public void ImageUrlTest()
        {
            // TODO unit test for the property 'ImageUrl'
        }
        /// <summary>
        /// Test the property 'ButtonUrl'
        /// </summary>
        [Test]
        public void ButtonUrlTest()
        {
            // TODO unit test for the property 'ButtonUrl'
        }
        /// <summary>
        /// Test the property 'ButtonText'
        /// </summary>
        [Test]
        public void ButtonTextTest()
        {
            // TODO unit test for the property 'ButtonText'
        }

    }

}
